// Flex Box Card
//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;
$num-columns : 8;
$one-column : 100% / $num_columns;
$loop-start: 1;
$loop-end: $num-columns +1;

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

// Mixins
$one-column: 12.5%;
@mixin col($span-num) {
    flex: 0 0 $one-column * $span-num;
}
    
@mixin offset($offset-num) {
    margin-left: $one-column * $offset-num;
}
    
//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}

//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

// CSS Grid
.grid-box {
    display: grid;
    grid-template-columns: 12.5% 1fr 1fr 1fr 12.5%;
    grid-template-rows: 1fr 1fr 1fr 1fr;
}
.cell {
    margin: auto;
    margin-top: 0;
    margin-bottom: 0;
}
.g-col-5 {
    grid-column-start: 5;
}
.g-col-4 {
    grid-column-start: 4;
}
.g-col-3 {
    grid-column-start: 3;
}
.g-col-2 {
    grid-column-start: 2;
}
.end {
    align-self: end;
}

@supports not (display: grid) {
    // Flex Code
    .row {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        align-content: space-between;
        height: $card-height;
    }

    .cell {
        flex: 1;
        text-align: center;
        margin: 0;
    }   

    //make column classes 
    @for $index from $loop-start to $loop-end {
        .col-#{$index} {
            @include col($index);
        }
    }

    //make offset classes
    @for $index from $loop-start to $loop-end {
        .offset-#{$index} {
            @include offset($index);
        }
    }
    // End Flexbox Card            
} 